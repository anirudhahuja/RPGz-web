// Importing stylesheets

// Sections
@use './style/sections/town.scss';
@use './style/sections/nutrition-tracker.scss';

// Menus
@use './style/menu/player-info.scss';
@use './style/menu/quest-log.scss';
@use './style/menu/profile.scss';
@use './style/menu/accepted-quests.scss';
@use './style/menu/food-search.scss';

// Variables
@use './style/variables/breakpoints' as bp;

// Components
@use './style/components/exp-bar.scss';
@use './style/components/login-form.scss';
@use './style/components/character-creation.scss';

@font-face {
    font-family: 'Yngreena';
    src: url('./assets/fonts/yngreena.ttf') format('truetype');
    font-weight: normal; 
    font-style: normal; 
}

@font-face {
    font-family: 'Yngreena-Bold';
    src: url('./assets/fonts/yngreena-bold.ttf') format('truetype');
    font-weight: normal; 
    font-style: normal; 
}

// Add this custom property to handle dynamic viewport height
:root {
    --vh: 1vh;
}

// Update any 100vh references to use the custom property
html, body {
    height: 100vh; /* Fallback */
    height: calc(var(--vh) * 100);
    overflow: hidden;
}

h1 {
    font-family: 'Yngreena-Bold';
    color: white;
    font-size: clamp(1.5rem, 2vw + 1rem, 3rem);
}

h2 {
    font-family: 'Yngreena-Bold';
    color: white;
    font-size: clamp(1rem, 1.3vw + 0.6rem, 2rem);
}

h5 {
    font-size: clamp(0.7rem, 0.8vw + 0.5rem, 1.4rem);
    font-family: 'Yngreena';
}

.portrait-overlay {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #D9E7E7;
    z-index: 9999;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    text-align: center;
    padding: 20px;

    h2 {
        margin-top: 40px;
        margin-bottom: 15px;
        font-size: 1.8rem;
        color: #333;
    }

    p {
        color: #666;
        font-size: 1.2rem;
        font-weight: 600;
    }
}

.rotate-device-image {
    width: 150px;
    height: 150px;
}

.rotate-device-logo {
    width: 150px;
    height: 150px;
    position: absolute;
    top: 1%;
}

@keyframes rotate {
    0% { transform: rotate(0deg); }
    25% { transform: rotate(-90deg); }
    75% { transform: rotate(-90deg); }
    100% { transform: rotate(0deg); }
}

@media only screen and (orientation: portrait) {
    .portrait-overlay {
        display: flex;
    }

    body {
        overflow: hidden;
    }
}